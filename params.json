{"name":"CodeQ Invest","tagline":"New way to deal with internal software quality","body":"## New metaphor: Quality Investment\r\n\r\nCodeQ Invest implements a **model for investment in quality** based on the [SQALE method](http://www.sqale.org). Instead of just pointing at problems in your code base this helps you to determine which problems should be fixed to gain an immediate productivity advantage.\r\n\r\nYou define  quality requirements (e.g. code coverage should be greater than 80%) and estimate how long it would take to fix the violation of such a requirement. Then you estimate how expensive (in terms of time) it would be to leave the violation untouched. The first estimate are the **remediation costs** (RC) and the latter the **non-remediation costs** (NRC). From these two estimates a **profit is derived**: the time you save when you fix the violation, NRC - RC. This is the basic idea of the quality investment.\r\n\r\nThe quality investment makes a proper management of internal software quality possible. This metaphor enables you to report the internal software quality in a useful way to business people. As a team you think in terms of **return on investment** and profit when discussing internal software quality.\r\n\r\nThe estimated costs are additionally weighted by other factors, e.g. the non-remediation costs are weighted by the change probability of the code.\r\n\r\n![CodeQ Invest concept](https://raw.github.com/CodeQInvest/codeq-invest/gh-pages/images/concept.png)\r\n\r\n## Features\r\n\r\nCodeQ Invest supports the following features:\r\n\r\n* Defining your own projects which will be analyzed by a cron job\r\n* Visualization of investment opportunities with a tree map\r\n* Calculation of the best possible investment plan\r\n* ROI calculation and visualization\r\n* Manual estimates for code change probabilities\r\n* Subversion support for automatic calculation of code change probabilities\r\n* 3 different methods to weight code changes\r\n\r\nComing soon (these features will be included in the version 1.0.0):\r\n\r\n* Support for PostgreSQL (should work but it's not tested yet)\r\n* Multi-module project support\r\n* Defining and managing quality profiles via the web-ui\r\n* Git support\r\n\r\nThere are a lot more ideas for this tool. A detailed roadmap will be published when the first version was released.\r\n\r\n## Screenshot\r\n\r\nYou can get a glimpse of the software by the following screenshot.\r\n\r\n![CodeQ Invest screenshot](https://raw.github.com/CodeQInvest/codeq-invest/gh-pages/images/screenshot.png)\r\n\r\n## For early adopters\r\n\r\nCodeQ Invest is in an early development phase. You can run the software from scratch with the following easy steps:\r\n\r\n1. Download the source archive which you can find on the right side.\r\n2. Run ```mvn clean install -DskipITs``` in the root directory of the project.\r\n3. Change to the directory web-ui: ```cd web-ui```.\r\n4. Run ```mvn org.codehaus.cargo:cargo-maven2-plugin:run -Pdebug-web-app```.\r\n5. Afterwards you can access the running application under [localhost:8080](http://localhost:8080).\r\n\r\nThis will start the application with test data and an in-memory database. You can find a project with a succeeded analysis under [localhost:8080/projects/3](http://localhost:8080/projects/3).\r\n\r\n## For developers\r\n\r\nFeel free to contribute. You can find more information in the [readme](https://github.com/CodeQInvest/codeq-invest).","google":"UA-36050488-2","note":"Don't delete this file! It's used internally to help with page regeneration."}